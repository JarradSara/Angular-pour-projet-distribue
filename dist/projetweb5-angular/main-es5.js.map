{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/activite-create/activite-create.component.ts","webpack:///src/app/activite-create/activite-create.component.html","webpack:///src/app/activite-edit/activite-edit.component.ts","webpack:///src/app/activite-edit/activite-edit.component.html","webpack:///src/app/activites-list/activites-list.component.ts","webpack:///src/app/activites-list/activites-list.component.html","webpack:///src/app/adherant-create/adherant-create.component.ts","webpack:///src/app/adherant-create/adherant-create.component.html","webpack:///src/app/adherant-edit/adherant-edit.component.ts","webpack:///src/app/adherant-edit/adherant-edit.component.html","webpack:///src/app/adherants-list/adherants-list.component.ts","webpack:///src/app/adherants-list/adherants-list.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/signin/signin.component.ts","webpack:///src/app/auth/signin/signin.component.html","webpack:///src/app/auth/signup/signup.component.ts","webpack:///src/app/auth/signup/signup.component.html","webpack:///src/app/book-create/book-create.component.ts","webpack:///src/app/book-create/book-create.component.html","webpack:///src/app/book-edit/book-edit.component.ts","webpack:///src/app/book-edit/book-edit.component.html","webpack:///src/app/books-list/books-list.component.ts","webpack:///src/app/books-list/books-list.component.html","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/pret-create/pret-create.component.ts","webpack:///src/app/pret-create/pret-create.component.html","webpack:///src/app/pret-edit/pret-edit.component.ts","webpack:///src/app/pret-edit/pret-edit.component.html","webpack:///src/app/prets-list/prets-list.component.ts","webpack:///src/app/prets-list/prets-list.component.html","webpack:///src/app/shared/activite.service.ts","webpack:///src/app/shared/adherant.service.ts","webpack:///src/app/shared/auth-guard.service.ts","webpack:///src/app/shared/auth.service.ts","webpack:///src/app/shared/pret.service.ts","webpack:///src/app/shared/rest-api.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","ActiviteCreateComponent","activiteservice","router","activiteDetails","nomActivite","descriptionActivite","niveauActivite","dataActivite","createActivite","subscribe","data","navigate","addActivite","selector","templateUrl","styleUrls","ActiviteEditComponent","actRoute","idActivite","snapshot","params","activiteData","getActivite","window","confirm","updateActivite","ActivitesListComponent","Activite","loadActivites","getActivites","deleteActivite","AdherantCreateComponent","adherantservice","adherantDetails","nomAdherant","prenomAdherant","ageAdherant","emailAdherant","adresseAdherant","dataAdherant","createAdherant","addAdherant","AdherantEditComponent","idAdherant","adherantData","getAdherant","updateAdherant","AdherantsListComponent","Adherant","loadAdherants","getAdherants","deleteAdherant","routes","path","pathMatch","redirectTo","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","lastUpdate","Date","title","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","AppModule","declarations","providers","bootstrap","SigninComponent","formBuilder","authService","initForm","signInForm","group","email","required","password","pattern","console","log","value","get","signInUser","error","errorMessage","onSubmit","SignupComponent","signUpForm","createNewUser","BookCreateComponent","restApi","bookDetails","nomOuvrage","nomAuteur","numEdition","dataBook","createBook","addBook","BookEditComponent","codeBarre","bookData","getBook","updateBook","BooksListComponent","Book","loadBooks","getBooks","deleteBook","HeaderComponent","onAuthStateChanged","user","isAuth","signOutUser","PretCreateComponent","pretService","pretDetails","begin","end","book","adherant","dataPret","createPret","addPret","PretEditComponent","idpret","pretData","getPret","updatePret","PretsListComponent","Pret","loadPrets","getPrets","deletePret","ActiviteService","http","apiURL","httpOptions","headers","pipe","handleError","activite","post","put","ErrorEvent","message","status","alert","providedIn","AdherantService","AuthGuardService","reject","AuthService","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","PretService","pret","RestApiService","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ActiviteService } from \"../shared/activite.service\";\n\n@Component({\n  selector: 'app-activite-create',\n  templateUrl: './activite-create.component.html',\n  styleUrls: ['./activite-create.component.scss']\n})\nexport class ActiviteCreateComponent implements OnInit {\n\n@Input() activiteDetails = { nomActivite:'', descriptionActivite: '', niveauActivite: ''}\n\n  constructor(\n    public activiteservice: ActiviteService,\n    public router: Router\n  ) { }\n\n  ngOnInit() { }\n\n  addActivite(dataActivite) {\n    this.activiteservice.createActivite(this.activiteDetails).subscribe((data: {}) => {\n      this.router.navigate(['/activites-list'])\n    })\n  }\n\n}\n","<div class=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\n<h5 class=\"my-0 mr-md-auto font-weight-normal\">Gestion des Activites </h5>\n  <nav class=\"my-2 my-md-0 mr-md-3\">\n    <a class=\"btn btn-outline-primary\" routerLinkActive=\"active\" routerLink=\"/create-activite\">Creer Activite</a>\n  </nav>\n  <a class=\"btn btn-outline-primary\" routerLinkActive=\"active\" routerLink=\"/activites-list\">Liste des Activites Culturelles</a>\n</div>\n<div class=\"container custom-container\">\n  <div class=\"col-md-12\">\n    <h3 class=\"mb-3 text-center\">Creer une Activite Culturelle</h3>\n\n     <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"activiteDetails.nomActivite\" class=\"form-control\" placeholder=\"Nom de l'activite culturelle  \">\n         \n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"activiteDetails.descriptionActivite\" class=\"form-control\" placeholder=\"Description de l'activite  \">\n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"activiteDetails.niveauActivite\" class=\"form-control\" placeholder=\"Niveau demande pour l'activite  \">\n    </div>\n\n    <div class=\"form-group\">\n      <button class=\"btn btn-success btn-lg btn-block\" (click)=\"addActivite(activiteDetails)\">Creer l'Activite</button>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { ActiviteService } from '../shared/activite.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-activite-edit',\n  templateUrl: './activite-edit.component.html',\n  styleUrls: ['./activite-edit.component.scss']\n})\nexport class ActiviteEditComponent implements OnInit {\n\nidActivite = this.actRoute.snapshot.params['idActivite'];\n  activiteData: any = {};\n\n  constructor(\n    public activiteservice: ActiviteService,\n    public actRoute: ActivatedRoute,\n    public router: Router\n  ) { \n  }\n\n  ngOnInit() { \n    this.activiteservice.getActivite(this.idActivite).subscribe((data: {}) => {\n      this.activiteData = data;\n    })\n  }\n\n  // Update employee data\n  updateActivite() {\n    if(window.confirm('Are you sure, you want to update?')){\n      this.activiteservice.updateActivite(this.idActivite, this.activiteData).subscribe(data => {\n        this.router.navigate(['/activites-list'])\n      })\n    }\n  }\n\n}\n\n","<div class=\"container custom-container\">\n  <div class=\"col-md-12\">\n    \n    <h3 class=\"mb-3 text-center\">Update Activite</h3>\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"activiteData.nomActivite\" class=\"form-control\" placeholder=\"Nom de l'Activite\">\n    </div>\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"activiteData.descriptionActivite\" class=\"form-control\" placeholder=\"Description de l'activite\">\n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"activiteData.niveauActivite\" class=\"form-control\" placeholder=\"Niveau demande de l'Activite\">\n    </div>\n\n    <div class=\"form-group\">\n      <button class=\"btn btn-success btn-lg btn-block\" (click)=\"updateActivite()\">Update Activite</button>\n    </div>\n    \n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ActiviteService } from \"../shared/activite.service\";\n\n@Component({\n  selector: 'app-activites-list',\n  templateUrl: './activites-list.component.html',\n  styleUrls: ['./activites-list.component.scss']\n})\nexport class ActivitesListComponent implements OnInit {\n\nActivite: any = [];\n\n  constructor(\n    public activiteservice: ActiviteService\n  ) { }\n\n  ngOnInit() {\n    this.loadActivites()\n  }\n\n  // Get employees list\n  loadActivites() {\n    return this.activiteservice.getActivites().subscribe((data: {}) => {\n      this.Activite = data;\n    })\n  }\n\n  // Delete employee\n  deleteActivite(idActivite) {\n    if (window.confirm('Are you sure, you want to delete?')){\n      this.activiteservice.deleteActivite(idActivite).subscribe(data => {\n        this.loadActivites()\n      })\n    }\n  }\n\n}\n\n","<div class=\"container custom-container-2\">\n\n  <!-- Show it when there is no book -->\n  <div class=\"no-data text-center\" *ngIf=\"Activite.length == 0\">\n    <p>Il n'y a pas encore d'Activites' !</p>\n    <button class=\"btn btn-outline-primary\" routerLink=\"/create-activite\">Ajouter une Activite Culturelle</button>\n  </div>\n\n  <!-- Books list table, it hides when there is no book -->\n  <div *ngIf=\"Activite.length !== 0\">\n    <h3 class=\"mb-3 text-center\">Liste des Activites Culturelles</h3>\n\n    <div class=\"col-md-12\">\n      <table class=\"table table-bordered\">\n        <thead>\n          <tr>\n           \n            <th scope=\"col\">Nom d'Activite</th>\n            <th scope=\"col\">Description d'Activite</th>\n            <th scope=\"col\">Niveau demande d'Activite</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let activite of Activite\">\n            \n            <td>{{activite.nomActivite}}</td>\n            <td>{{activite.descriptionActivite}}</td>\n            <td>{{activite.niveauActivite}}</td>\n            <td>\n              <button class=\"btn btn-outline-primaryedit\" routerLink=\"/activite-edit/{{activite.idActivite}}\">Modifier</button>\n               <button class=\"btn btn-outline-primaryedit\" (click)=\"deleteActivite(activite.idActivite)\">Supprimer</button>\n              \n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n\n</div>\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AdherantService } from '../shared/adherant.service';\n\n@Component({\n  selector: 'app-adherant-create',\n  templateUrl: './adherant-create.component.html',\n  styleUrls: ['./adherant-create.component.scss']\n})\nexport class AdherantCreateComponent implements OnInit {\n\n @Input() adherantDetails = { nomAdherant:'', prenomAdherant: '', ageAdherant: '', emailAdherant: '', adresseAdherant: ''}\n\n  constructor(\n    public adherantservice: AdherantService,\n    public router: Router\n  ) { }\n\n  ngOnInit() { }\n\n  addAdherant(dataAdherant) {\n    this.adherantservice.createAdherant(this.adherantDetails).subscribe((data: {}) => {\n      this.router.navigate(['/adherants-list'])\n    })\n  }\n\n}\n\n","<div class=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\n  <h5 class=\"my-0 mr-md-auto font-weight-normal\">Gestion des Adherants </h5>\n  <nav class=\"my-2 my-md-0 mr-md-3\">\n    <a class=\"btn btn-outline-primary\" routerLinkActive=\"active\" routerLink=\"/create-adherant\">Creer Adherant</a>\n  </nav>\n  <a class=\"btn btn-outline-primary\" routerLinkActive=\"active\" routerLink=\"/adherants-list\">Liste des Adherants</a>\n</div>\n<div class=\"container custom-container\">\n  <div class=\"col-md-12\">\n    <h3 class=\"mb-3 text-center\">Creer un Adherant</h3>\n\n     <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"adherantDetails.nomAdherant\" class=\"form-control\" placeholder=\"Nom \">\n         \n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"adherantDetails.prenomAdherant\" class=\"form-control\" placeholder=\"Prenom \">\n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"adherantDetails.ageAdherant\" class=\"form-control\" placeholder=\"Age  \">\n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"adherantDetails.emailAdherant\" class=\"form-control\" placeholder=\"Email  \">\n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"adherantDetails.adresseAdherant\" class=\"form-control\" placeholder=\"Adresse  \">\n    </div>\n\n    <div class=\"form-group\">\n      <button class=\"btn btn-success btn-lg btn-block\" (click)=\"addAdherant(adherantDetails)\">Creer l'adherant</button>\n    </div>\n\n  </div>\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AdherantService } from '../shared/adherant.service';\n\n\n@Component({\n  selector: 'app-adherant-edit',\n  templateUrl: './adherant-edit.component.html',\n  styleUrls: ['./adherant-edit.component.scss']\n})\nexport class AdherantEditComponent implements OnInit {\n\n idAdherant = this.actRoute.snapshot.params['idAdherant'];\n  adherantData: any = {};\n\n  constructor(\n    public adherantservice: AdherantService,\n    public actRoute: ActivatedRoute,\n    public router: Router\n  ) { \n  }\n\n  ngOnInit() { \n    this.adherantservice.getAdherant(this.idAdherant).subscribe((data: {}) => {\n      this.adherantData = data;\n    })\n  }\n\n  // Update employee data\n  updateAdherant() {\n    if(window.confirm('Are you sure, you want to update?')){\n      this.adherantservice.updateAdherant(this.idAdherant, this.adherantData).subscribe(data => {\n        this.router.navigate(['/adherants-list'])\n      })\n    }\n  }\n\n}\n\n","<div class=\"container custom-container\">\n  <div class=\"col-md-12\">\n    \n    <h3 class=\"mb-3 text-center\">Update Adherant</h3>\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"adherantData.nomAdherant\" class=\"form-control\" placeholder=\"Nom \">\n    </div>\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"adherantData.prenomAdherant\" class=\"form-control\" placeholder=\"Prenom\">\n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"adherantData.ageAdherant\" class=\"form-control\" placeholder=\"Age\">\n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"adherantData.emailAdherant\" class=\"form-control\" placeholder=\"Email\">\n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"adherantData.adresseAdherant\" class=\"form-control\" placeholder=\"Adresse\">\n    </div>\n\n    <div class=\"form-group\">\n      <button class=\"btn btn-success btn-lg btn-block\" (click)=\"updateAdherant()\">Update Adherant</button>\n    </div>\n    \n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AdherantService } from \"../shared/adherant.service\";\n\n@Component({\n  selector: 'app-adherants-list',\n  templateUrl: './adherants-list.component.html',\n  styleUrls: ['./adherants-list.component.scss']\n})\nexport class AdherantsListComponent implements OnInit {\n\nAdherant: any = [];\n\n  constructor(\n    public adherantservice: AdherantService\n  ) { }\n\n  ngOnInit() {\n    this.loadAdherants()\n  }\n\n  // Get employees list\n  loadAdherants() {\n    return this.adherantservice.getAdherants().subscribe((data: {}) => {\n      this.Adherant = data;\n    })\n  }\n\n  // Delete employee\n  deleteAdherant(idAdherant) {\n    if (window.confirm('Are you sure, you want to delete?')){\n      this.adherantservice.deleteAdherant(idAdherant).subscribe(data => {\n        this.loadAdherants()\n      })\n    }\n  }\n\n}\n\n","<div class=\"container custom-container-2\">\n\n  <!-- Show it when there is no book -->\n  <div class=\"no-data text-center\" *ngIf=\"Adherant.length == 0\">\n    <p>Il n'y a pas encore d'Adherants, ajoutez en un !</p>\n    <button class=\"btn btn-outline-primary\" routerLink=\"/create-adherant\">Ajouter un Adherant</button>\n  </div>\n\n  <!-- Books list table, it hides when there is no book -->\n  <div *ngIf=\"Adherant.length !== 0\">\n    <h3 class=\"mb-3 text-center\">Liste d'Adherants</h3>\n\n    <div class=\"col-md-12\">\n      <table class=\"table table-bordered\">\n        <thead>\n          <tr>\n           \n            <th scope=\"col\">Nom </th>\n            <th scope=\"col\">Prenom</th>\n            <th scope=\"col\">Age</th>\n            <th scope=\"col\">Email</th>\n            <th scope=\"col\">Adresse</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let adherant of Adherant\">\n            \n            <td>{{adherant.nomAdherant}}</td>\n            <td>{{adherant.prenomAdherant}}</td>\n            <td>{{adherant.ageAdherant}}</td>\n            <td>{{adherant.emailAdherant}}</td>\n            <td>{{adherant.adresseAdherant}}</td>\n            <td>\n              <button class=\"btn btn-outline-primaryedit\" routerLink=\"/adherant-edit/{{adherant.idAdherant}}\">Modifier</button>\n               <button class=\"btn btn-outline-primaryedit\" (click)=\"deleteAdherant(adherant.idAdherant)\">Supprimer</button>\n              \n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n\n</div>\n\n\n","import { NgModule } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BookCreateComponent } from './book-create/book-create.component';\nimport { BookEditComponent } from './book-edit/book-edit.component';\nimport { BooksListComponent } from './books-list/books-list.component';\nimport { SigninComponent } from './auth/signin/signin.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { HeaderComponent} from './header/header.component';\nimport {AuthService} from './shared/auth.service';\nimport {AuthGuardService} from './shared/auth-guard.service';\nimport {AdherantCreateComponent} from './adherant-create/adherant-create.component';\nimport { AdherantEditComponent } from './adherant-edit/adherant-edit.component';\nimport { AdherantsListComponent } from './adherants-list/adherants-list.component';\nimport { PretCreateComponent } from './pret-create/pret-create.component';\nimport { PretsListComponent } from './prets-list/prets-list.component';\nimport { PretEditComponent } from './pret-edit/pret-edit.component';\nimport { ActiviteCreateComponent } from './activite-create/activite-create.component';\nimport { ActivitesListComponent } from './activites-list/activites-list.component';\nimport { ActiviteEditComponent } from './activite-edit/activite-edit.component';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: 'create-book' },\n  { path: 'auth/signin',component: SigninComponent },\n  { path: 'auth/signup', component: SignupComponent },\n  { path: 'create-book', canActivate:[AuthGuardService], component: BookCreateComponent },\n  { path: 'books-list',canActivate:[AuthGuardService], component: BooksListComponent },\n  { path: 'book-edit/:codeBarre',canActivate:[AuthGuardService],  component: BookEditComponent },\n  { path: 'create-adherant', canActivate:[AuthGuardService], component: AdherantCreateComponent },\n  { path: 'adherants-list',canActivate:[AuthGuardService], component: AdherantsListComponent },\n  { path: 'adherant-edit/:idAdherant',canActivate:[AuthGuardService],  component: AdherantEditComponent },\n  { path: 'create-pret', canActivate:[AuthGuardService], component: PretCreateComponent },\n  { path: 'prets-list',canActivate:[AuthGuardService], component: PretsListComponent },\n  { path: 'pret-edit/:idpret',canActivate:[AuthGuardService],  component: PretEditComponent },\n  { path: 'create-activite', canActivate:[AuthGuardService], component: ActiviteCreateComponent },\n  { path: 'activites-list',canActivate:[AuthGuardService], component: ActivitesListComponent },\n  { path: 'activite-edit/:idActivite',canActivate:[AuthGuardService],  component: ActiviteEditComponent }\n]; \n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport * as firebase from 'firebase';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  lastUpdate = new Date();\n  title = 'projetweb5-angular';\n\n  constructor() {\n    const firebaseConfig = {\n      apiKey: 'AIzaSyBajlLBjc0sDV1-NvIXiJJ_VzDhY94l3_A',\n      authDomain: 'authentification-db829.firebaseapp.com',\n      databaseURL: 'https://authentification-db829.firebaseio.com',\n      projectId: 'authentification-db829',\n      storageBucket: 'authentification-db829.appspot.com',\n      messagingSenderId: '869890421199',\n      appId: '1:869890421199:web:074843efae422adb8762ba',\n      measurementId: 'G-RGF9R476KQ'\n    };\n    // Initialize Firebase\n    firebase.initializeApp(firebaseConfig);\n    firebase.analytics();\n\n  }\n\n}\n","<app-header></app-header>\n<div class=\"container\">\n\t<router-outlet></router-outlet>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BookCreateComponent } from './book-create/book-create.component';\nimport { BookEditComponent } from './book-edit/book-edit.component';\nimport { BooksListComponent } from './books-list/books-list.component';\nimport { SigninComponent } from './auth/signin/signin.component';\nimport { SignupComponent } from './auth/signup/signup.component';\nimport { HeaderComponent} from './header/header.component';\nimport {AuthService} from './shared/auth.service';\nimport {AuthGuardService} from './shared/auth-guard.service';\nimport { AdherantCreateComponent } from './adherant-create/adherant-create.component';\nimport { AdherantEditComponent } from './adherant-edit/adherant-edit.component';\nimport { AdherantsListComponent } from './adherants-list/adherants-list.component';\nimport { AdherantService } from './shared/adherant.service';\nimport { PretCreateComponent } from './pret-create/pret-create.component';\nimport { PretEditComponent } from './pret-edit/pret-edit.component';\nimport { PretsListComponent } from './prets-list/prets-list.component';\nimport { PretService } from './shared/pret.service';\nimport { ActiviteCreateComponent } from './activite-create/activite-create.component';\nimport { ActiviteEditComponent } from './activite-edit/activite-edit.component';\nimport { ActivitesListComponent } from './activites-list/activites-list.component';\nimport { ActiviteService } from './shared/activite.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignupComponent,\n    SigninComponent,\n    BookCreateComponent,\n    BookEditComponent,\n    BooksListComponent,\n    AdherantCreateComponent,\n    AdherantEditComponent,\n    AdherantsListComponent,\n    PretCreateComponent,\n    PretEditComponent,\n    PretsListComponent,\n    ActiviteCreateComponent,\n    ActiviteEditComponent,\n    ActivitesListComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [\n    AuthService,\n    AuthGuardService,\n    AdherantService,\n    PretService,\n    ActiviteService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport {Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport {AuthService} from '../../shared/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-signin',\n  templateUrl: './signin.component.html',\n  styleUrls: ['./signin.component.scss']\n})\nexport class SigninComponent implements OnInit {\n\n\tsignInForm: FormGroup;\n\terrorMessage:string;\n\n  constructor(private formBuilder: FormBuilder,\n\t\t\t  private authService: AuthService,\n\t\t\t private router : Router) { }\n\n  ngOnInit() {\n\t this.initForm(); \n  }\n\n\tinitForm(){\n\t\t  this.signInForm = this.formBuilder.group({\n\t\t\temail: ['',[ Validators.required, Validators.email]],\n\t\t\tpassword: ['', [Validators.required, Validators.pattern('/[0-9a-zA-Z]{6,}/')]]\n\t\t}); \n\t\t\n\t\t\t\t\t\t\n\t}\n\t\n\t onSubmit() {\n\t\t\n  console.log('signInForm' , this.signInForm.value);\n\n\t\tconst email = this.signInForm.get('email').value;\n\t\tconst password = this.signInForm.get('password').value;\n\t\tthis.authService.signInUser(email, password).then(\n\t\t\t\t\t() => {\tthis.router.navigate( ['/create-book']); },\n\t\t\t\t\t(error) => {this.errorMessage = error; }\n\t\t);\n}\n\nget email() { return this.signInForm.get('email'); }\nget password() { return this.signInForm.get('password');}\n\t\t\n\t\t\n\t\t\n}\n"," <div align=\"center\">\n<section class=\"section\">\n  <div class=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\"></div>\n  <div class=\"columns is-centered\">\n    <div class=\"column is-one-third\">\n      \n      <form [formGroup]=\"signInForm\" (ngSubmit)=\"onSubmit()\">\n\n        <div class=\"field\">\n          <label class=\"label\">Email</label>\n          <input class=\"input\" id=\"email\"\n                 type=\"text\"\n                 placeholder=\" Email \"\n                 formControlName=\"email\">\n       \n        </div>\n        <div class=\"field\">\n          <label class=\"label\">Mot de passe</label>\n          <input class=\"input\" type=\"password\" placeholder=\" Mot de Passe \" formControlName=\"password\">\n \t   </div>\n        <button type=\"submit\" style=\"background-color:LightGray;\" border-color=\"#007bff;\"  class=\"button is-primary\">Connexion</button>\n      </form>      \n\t   <p class=\"text-danger\">{{ errorMessage }}</p>\n    </div>\n  </div>\n</section>\n</div>\n\n\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {Validators, FormBuilder, FormGroup } from '@angular/forms';\nimport {AuthService} from '../../shared/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n\tsignUpForm: FormGroup;\n\terrorMessage:string;\n\n  constructor(private formBuilder: FormBuilder,\n\t\t\t\tprivate authService: AuthService,\n\t\t\t\tprivate router : Router) { }\n\n  ngOnInit() {\n\tthis.initForm(); \n  }\n\n\tinitForm(){\n\t\tthis.signUpForm = this.formBuilder.group( {\n\t\t\temail: ['',[ Validators.required, Validators.email]],\n\t\t\tpassword: ['', [Validators.required, Validators.pattern('/[0-9a-zA-Z]{6,}/')]]\n\t\t}); \n\t\t\n\t\t\n\t}\n\t\n\t onSubmit() {\n\t\tconsole.log('signUpForm' , this.signUpForm.value);\n\t\t\n\t\tconst email = this.signUpForm.get('email').value;\n\t\tconst password = this.signUpForm.get('password').value;\n\t\tthis.authService.createNewUser(email, password).then(\n\t\t\t  () =>  {\tthis.router.navigate( ['/create-book']); },\n\t\t\t (error) => { this.errorMessage = error; }\n\t\t);\n\t} \n\t\n\tget email() { return this.signUpForm.get('email'); }\n\tget password() { return this.signUpForm.get('password');}\n\n}\n"," \n <div align=\"center\">\n <section class=\"section\">\n   <div class=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\"></div>\n  <div class=\"columns is-centered\">\n    <div class=\"column is-one-third\">\n      \n      <form [formGroup]=\"signUpForm\" (ngSubmit)=\"onSubmit()\">\n        \n        <div class=\"field\">\n          \n          <label class=\"label\">Email</label>\n          <input class=\"input\"\n\t\t\t\t id=\"email\"\n                 type=\"text\"\n                 placeholder=\" Email \"\n                 formControlName=\"email\">\n          \n                 \n        </div>\n        <div class=\"field\">\n          <label class=\"label\">Mot de passe</label>\n          <input class=\"input\"\n                 type=\"password\"\n                 placeholder=\" Mot de Passe \"\n                 formControlName=\"password\">\n \t   </div>\n        <button type=\"submit\" style=\"background-color:LightGray;\" border-color=\"#007bff;\" class=\"button is-primary\">Creer mon compte</button>\n     \n      </form>\n            \n\t   <p class=\"text-danger\">{{ errorMessage }}</p>\n    </div>\n  </div>\n\n</section>\n</div>\n\n\n\n\n\n\n \n\n\n\n\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { RestApiService } from \"../shared/rest-api.service\";\n\n@Component({\n  selector: 'app-book-create',\n  templateUrl: './book-create.component.html',\n  styleUrls: ['./book-create.component.scss']\n})\nexport class BookCreateComponent implements OnInit {\n\n  @Input() bookDetails = { nomOuvrage:'', nomAuteur: '', numEdition: ''}\n\n  constructor(\n    public restApi: RestApiService,\n    public router: Router\n  ) { }\n\n  ngOnInit() { }\n\n  addBook(dataBook) {\n    this.restApi.createBook(this.bookDetails).subscribe((data: {}) => {\n      this.router.navigate(['/books-list'])\n    })\n  }\n\n}\n","<div class=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\n  <h5 class=\"my-0 mr-md-auto font-weight-normal\">Gestion des Livres </h5>\n  <nav class=\"my-2 my-md-0 mr-md-3\">\n    <a class=\"btn btn-outline-primary\" routerLinkActive=\"active\" routerLink=\"/create-book\">Creer Livre</a>\n  </nav>\n  <a class=\"btn btn-outline-primary\" routerLinkActive=\"active\" routerLink=\"/books-list\">Liste de Livres</a>\n</div>\n<div class=\"container custom-container\">\n  <div class=\"col-md-12\">\n    <h3 class=\"mb-3 text-center\">Creer un Livre</h3>\n\n     <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"bookDetails.nomOuvrage\" class=\"form-control\" placeholder=\"Nom de l'ouvrage  \">\n         \n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"bookDetails.nomAuteur\" class=\"form-control\" placeholder=\"Nom de l'auteur  \">\n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"bookDetails.numEdition\" class=\"form-control\" placeholder=\"Numero d'Edition  \">\n    </div>\n\n    <div class=\"form-group\">\n      <button class=\"btn btn-success btn-lg btn-block\" (click)=\"addBook(bookDetails)\">Creer le Livre</button>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from '../shared/rest-api.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-book-edit',\n  templateUrl: './book-edit.component.html',\n  styleUrls: ['./book-edit.component.scss']\n})\nexport class BookEditComponent implements OnInit {\n\ncodeBarre = this.actRoute.snapshot.params['codeBarre'];\n  bookData: any = {};\n\n  constructor(\n    public restApi: RestApiService,\n    public actRoute: ActivatedRoute,\n    public router: Router\n  ) { \n  }\n\n  ngOnInit() { \n    this.restApi.getBook(this.codeBarre).subscribe((data: {}) => {\n      this.bookData = data;\n    })\n  }\n\n  // Update employee data\n  updateBook() {\n    if(window.confirm('Are you sure, you want to update?')){\n      this.restApi.updateBook(this.codeBarre, this.bookData).subscribe(data => {\n        this.router.navigate(['/books-list'])\n      })\n    }\n  }\n\n}\n","<div class=\"container custom-container\">\n  <div class=\"col-md-12\">\n    \n    <h3 class=\"mb-3 text-center\">Update Livre</h3>\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"bookData.nomOuvrage\" class=\"form-control\" placeholder=\"Nom de l'ouvrage\">\n    </div>\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"bookData.nomAuteur\" class=\"form-control\" placeholder=\"Nom d'Auteur\">\n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"bookData.numeroEdition\" class=\"form-control\" placeholder=\"Numero d'Edition\">\n    </div>\n\n    <div class=\"form-group\">\n      <button class=\"btn btn-success btn-lg btn-block\" (click)=\"updateBook()\">Update Livre</button>\n    </div>\n    \n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { RestApiService } from \"../shared/rest-api.service\";\n@Component({\n  selector: 'app-books-list',\n  templateUrl: './books-list.component.html',\n  styleUrls: ['./books-list.component.scss']\n})\nexport class BooksListComponent implements OnInit {\n\nBook: any = [];\n\n  constructor(\n    public restApi: RestApiService\n  ) { }\n\n  ngOnInit() {\n    this.loadBooks()\n  }\n\n  // Get employees list\n  loadBooks() {\n    return this.restApi.getBooks().subscribe((data: {}) => {\n      this.Book = data;\n    })\n  }\n\n  // Delete employee\n  deleteBook(codeBarre) {\n    if (window.confirm('Are you sure, you want to delete?')){\n      this.restApi.deleteBook(codeBarre).subscribe(data => {\n        this.loadBooks()\n      })\n    }\n  }\n\n}\n","<div class=\"container custom-container-2\">\n\n  <!-- Show it when there is no book -->\n  <div class=\"no-data text-center\" *ngIf=\"Book.length == 0\">\n    <p>Il n'y a pas encore de livres !</p>\n    <button class=\"btn btn-outline-primary\" routerLink=\"/create-book\">Ajouter un Livre</button>\n  </div>\n\n  <!-- Books list table, it hides when there is no book -->\n  <div *ngIf=\"Book.length !== 0\">\n    <h3 class=\"mb-3 text-center\">Liste des Livres</h3>\n\n    <div class=\"col-md-12\">\n      <table class=\"table table-bordered\">\n        <thead>\n          <tr>\n           \n            <th scope=\"col\">Nom d'Ouvrage</th>\n            <th scope=\"col\">Nom d'Auteur</th>\n            <th scope=\"col\">Numero d'Edition</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let book of Book\">\n            \n            <td>{{book.nomOuvrage}}</td>\n            <td>{{book.nomAuteur}}</td>\n            <td>{{book.numEdition}}</td>\n            <td>\n              <button class=\"btn btn-outline-primaryedit\" routerLink=\"/book-edit/{{book.codeBarre}}\">Modifier</button>\n               <button class=\"btn btn-outline-primaryedit\" (click)=\"deleteBook(book.codeBarre)\">Supprimer</button>\n              \n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport * as firebase from 'firebase';\nimport {AuthService} from '../shared/auth.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n isAuth: boolean;\n  constructor(private authService: AuthService) { }\n\n  ngOnInit() {\n\tfirebase.auth().onAuthStateChanged(\n\t\t(user) => {\n\t\t\tif(user){\n\t\t\t\tthis.isAuth = true;\n\t\t\t\t\n\t\t\t} else {\n\t\t\t\tthis.isAuth = false ;\n\t\t\t}\n\t\t}\n\t);\n  }\n\n\tonsignOut(){\n\t\tthis.authService.signOutUser();\n\t}\n\n}\n","<nav class=\"navbar navbar-default\">\r\n\t<div class=\"container-fluid\">\r\n\t\t<ul class=\"nav navba-nav\">\r\n\t\t\t<li routerLinkActive=\"active\">\r\n\t\t\t\t<a class=\"btn btn-outline-primary\" routerLink=\"/create-book\" routerLinkActive=\"active\">Livres</a>\r\n\t\t\t\t<a class=\"btn btn-outline-primary\" routerLink=\"/create-adherant\" routerLinkActive=\"active\">Adherants</a>\r\n\t\t\t\t<a class=\"btn btn-outline-primary\" routerLink=\"/create-pret\" routerLinkActive=\"active\">Prets</a>\r\n\t\t\t\t<a class=\"btn btn-outline-primary\" routerLink=\"/create-activite\" routerLinkActive=\"active\">Activites culturelles</a>\r\n\t\t\t</li>\t\r\n\t\t</ul>\r\n\t\t<ul class=\"nav navbar-nav navbar-right\">\r\n\t\t\t<li routerLinkActive=\"/create-book\" *ngIf=\"!isAuth\">\r\n\t\t\t<a class=\"btn btn-outline-primary\" routerLink=\"auth/signup\">Creer un compte</a>\t\r\n\t\t\t<a class=\"btn btn-outline-primary\" routerLink=\"auth/signin\">Connexion</a>\r\n\t\t\t</li>\r\n\t\t\t\r\n\t\t\t<a class=\"btn btn-outline-primary\" (click)=\"onsignOut()\" *ngIf=\"isAuth\" >Deconnexion</a>\r\n\t\t</ul>\r\n\t</div>\r\n</nav>","import { Component, OnInit, Input } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { PretService } from \"../shared/pret.service\";\n\n@Component({\n  selector: 'app-pret-create',\n  templateUrl: './pret-create.component.html',\n  styleUrls: ['./pret-create.component.scss']\n})\nexport class PretCreateComponent implements OnInit {\n\n @Input() pretDetails = { begin:'', end: '', book: '', adherant:''}\n\n  constructor(\n    public pretService: PretService,\n    public router: Router\n  ) { }\n\n  ngOnInit() { }\n\n  addPret(dataPret) {\n    this.pretService.createPret(this.pretDetails).subscribe((data: {}) => {\n      this.router.navigate(['/prets-list'])\n    })\n  }\n\n}\n","<div class=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom shadow-sm\">\n  <h5 class=\"my-0 mr-md-auto font-weight-normal\">Gestion des Prets </h5>\n  <nav class=\"my-2 my-md-0 mr-md-3\">\n    <a class=\"btn btn-outline-primary\" routerLinkActive=\"active\" routerLink=\"/create-pret\">Creer un Pret</a>\n  </nav>\n  <a class=\"btn btn-outline-primary\" routerLinkActive=\"active\" routerLink=\"/prets-list\">Liste de Prets</a>\n</div>\n<div class=\"container custom-container\">\n  <div class=\"col-md-12\">\n    <h3 class=\"mb-3 text-center\">Creer un Pret</h3>\n\n     <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"pretDetails.begin\" class=\"form-control\" placeholder=\"Date du Pret en format YYYY-MM-DD \">\n         \n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"pretDetails.end\" class=\"form-control\" placeholder=\"Date du Retour en format YYYY-MM-DD \">\n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"pretDetails.book\" class=\"form-control\" placeholder=\"Nom d'Ouvrage deja existant sur votre liste de Livres!\">\n    </div>\n     <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"pretDetails.adherant\" class=\"form-control\" placeholder=\"Nom d'Adherant deja existant sur votre liste d'Adherants! \">\n    </div>\n\n    <div class=\"form-group\">\n      <button class=\"btn btn-success btn-lg btn-block\" (click)=\"addPret(pretDetails)\">Creer le Pret</button>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { PretService } from '../shared/pret.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-pret-edit',\n  templateUrl: './pret-edit.component.html',\n  styleUrls: ['./pret-edit.component.scss']\n})\nexport class PretEditComponent implements OnInit {\n\n  idpret = this.actRoute.snapshot.params['idpret'];\n  pretData: any = {};\n\n  constructor(\n    public pretService: PretService,\n    public actRoute: ActivatedRoute,\n    public router: Router\n  ) { \n  }\n\n  ngOnInit() { \n    this.pretService.getPret(this.idpret).subscribe((data: {}) => {\n      this.pretData = data;\n    })\n  }\n\n  // Update Pret data\n  updatePret() {\n    if(window.confirm('Are you sure, you want to update?')){\n      this.pretService.updatePret(this.idpret, this.pretData).subscribe(data => {\n        this.router.navigate(['/prets-list'])\n      })\n    }\n  }\n\n}\n","<div class=\"container custom-container\">\n  <div class=\"col-md-12\">\n    \n    <h3 class=\"mb-3 text-center\">Update Pret</h3>\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"pretData.begin\" class=\"form-control\" placeholder=\"Date du pret\">\n    </div>\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"pretData.end\" class=\"form-control\" placeholder=\"Date du retour\">\n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"pretData.book\" class=\"form-control\" placeholder=\"Nom d'Ouvrage\">\n    </div>\n\n    <div class=\"form-group\">\n      <input type=\"text\" [(ngModel)]=\"pretData.adherant\" class=\"form-control\" placeholder=\"Nom d'Adherant\">\n    </div>\n\n    <div class=\"form-group\">\n      <button class=\"btn btn-success btn-lg btn-block\" (click)=\"updatePret()\">Update Pret</button>\n    </div>\n    \n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { PretService } from \"../shared/pret.service\";\n\n@Component({\n  selector: 'app-prets-list',\n  templateUrl: './prets-list.component.html',\n  styleUrls: ['./prets-list.component.scss']\n})\nexport class PretsListComponent implements OnInit {\n\nPret: any = [];\n\n  constructor(\n    public pretService: PretService\n  ) { }\n\n  ngOnInit() {\n    this.loadPrets()\n  }\n\n  // Get employees list\n  loadPrets() {\n    return this.pretService.getPrets().subscribe((data: {}) => {\n      this.Pret = data;\n    })\n  }\n\n  deletePret(idpret) {\n    if (window.confirm('Are you sure, you want to delete?')){\n      this.pretService.deletePret(idpret).subscribe(data => {\n        this.loadPrets()\n      })\n    }\n  }\n\n}\n\n","<div class=\"container custom-container-2\">\n\n  <!-- Show it when there is no book -->\n  <div class=\"no-data text-center\" *ngIf=\"Pret.length == 0\">\n    <p>Il n'y a pas encore de Pret, ajoutez en un !</p>\n    <button class=\"btn btn-outline-primary\" routerLink=\"/create-pret\">Ajouter un Pret</button>\n  </div>\n\n  <!-- Books list table, it hides when there is no book -->\n  <div *ngIf=\"Pret.length !== 0\">\n    <h3 class=\"mb-3 text-center\">Liste des Prets</h3>\n\n    <div class=\"col-md-12\">\n      <table class=\"table table-bordered\">\n        <thead>\n          <tr>\n           \n            <th scope=\"col\">Date du pret</th>\n            <th scope=\"col\">Date du retour</th>\n            <th scope=\"col\">Livre</th>\n            <th scope=\"col\">Adherant</th>\n            <th scope=\"col\">Action</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr *ngFor=\"let pret of Pret\">\n \n            <td>{{pret.begin}} </td>\n            <td>{{pret.end}}</td>\n            <td>{{pret.book}}</td>\n            <td>{{pret.adherant}}</td>\n            <td> \n              <button class=\"btn btn-outline-primaryedit\" routerLink=\"/pret-edit/{{pret.idpret}}\">Modifier </button>\n               <button class=\"btn btn-outline-primaryedit\" (click)=\"deletePret(pret.idpret)\">Supprimer</button>\n              \n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n\n  </div>\n\n</div>\n\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Activite } from '../shared/activite';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ActiviteService {\r\n  // Define API\r\n  apiURL = 'http://localhost:8082';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  /*========================================\r\n    CRUD Methods for consuming RESTful API\r\n  =========================================*/\r\n\r\n  // Http Options\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n\r\n  // HttpClient API get() method => Fetch employees list\r\n  getActivites(): Observable<Activite> {\r\n    return this.http.get<Activite>(this.apiURL + '/activites')\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.handleError)\r\n    )\r\n  }\r\n\r\n  // HttpClient API get() method => Fetch employee\r\n  getActivite(idActivite): Observable<Activite> {\r\n    return this.http.get<Activite>(this.apiURL + '/activites/' + idActivite)\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.handleError)\r\n    )\r\n  }\r\n\r\n  // HttpClient API post() method => Create employee\r\n  createActivite(activite): Observable<Activite> {\r\n    return this.http.post<Activite>(this.apiURL + '/activites', activite, this.httpOptions)\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.handleError)\r\n    )\r\n  }  \r\n\r\n  // HttpClient API put() method => Update employee\r\n  updateActivite(idActivite, activite): Observable<Activite> {\r\n    return this.http.put<Activite>(this.apiURL + '/activites/' + idActivite, activite, this.httpOptions)\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.handleError)\r\n    )\r\n  }\r\n\r\n  // HttpClient API delete() method => Delete employee\r\n  deleteActivite(idActivite){\r\n    return this.http.delete<Activite>(this.apiURL + '/activites/' + idActivite, this.httpOptions)\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.handleError)\r\n    )\r\n  }\r\n\r\n  // Error handling\r\n  handleError(error) {\r\n     let errorMessage = '';\r\n     if (error.error instanceof ErrorEvent) {\r\n       // Get client-side error\r\n       errorMessage = error.error.message;\r\n     } else {\r\n       // Get server-side error\r\n       errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n     }\r\n     window.alert(errorMessage);\r\n     return throwError(errorMessage);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Adherant } from '../shared/adherant';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AdherantService {\r\n  // Define API\r\n  apiURL = 'http://localhost:8081';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  /*========================================\r\n    CRUD Methods for consuming RESTful API\r\n  =========================================*/\r\n\r\n  // Http Options\r\n  httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    })\r\n  }\r\n\r\n  // HttpClient API get() method => Fetch employees list\r\n  getAdherants(): Observable<Adherant> {\r\n    return this.http.get<Adherant>(this.apiURL + '/adherants')\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.handleError)\r\n    )\r\n  }\r\n\r\n  // HttpClient API get() method => Fetch employee\r\n  getAdherant(idAdherant): Observable<Adherant> {\r\n    return this.http.get<Adherant>(this.apiURL + '/adherants/' + idAdherant)\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.handleError)\r\n    )\r\n  }\r\n\r\n  // HttpClient API post() method => Create employee\r\n  createAdherant(adherant): Observable<Adherant> {\r\n    return this.http.post<Adherant>(this.apiURL + '/adherants', adherant, this.httpOptions)\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.handleError)\r\n    )\r\n  }  \r\n\r\n  // HttpClient API put() method => Update employee\r\n  updateAdherant(idAdherant, adherant): Observable<Adherant> {\r\n    return this.http.put<Adherant>(this.apiURL + '/adherants/' + idAdherant, adherant, this.httpOptions)\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.handleError)\r\n    )\r\n  }\r\n\r\n  // HttpClient API delete() method => Delete employee\r\n  deleteAdherant(idAdherant){\r\n    return this.http.delete<Adherant>(this.apiURL + '/adherants/' + idAdherant, this.httpOptions)\r\n    .pipe(\r\n      retry(1),\r\n      catchError(this.handleError)\r\n    )\r\n  }\r\n\r\n  // Error handling\r\n  handleError(error) {\r\n     let errorMessage = '';\r\n     if (error.error instanceof ErrorEvent) {\r\n       // Get client-side error\r\n       errorMessage = error.error.message;\r\n     } else {\r\n       // Get server-side error\r\n       errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n     }\r\n     window.alert(errorMessage);\r\n     return throwError(errorMessage);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport * as firebase from 'firebase';\r\n\r\n@Injectable()\r\n \r\nexport class AuthGuardService  implements CanActivate{\r\n\r\n  constructor( private router: Router) { }\r\ncanActivate(): Observable<boolean> | Promise<boolean> {\r\nreturn new Promise(\r\n(resolve, reject) => {\r\nfirebase.auth().onAuthStateChanged(\r\n\t\t\t\t\t(user)=> {\r\n\t\t\t\t\t\tif(user) {\r\n\t\t\t\t\t\t\tresolve(true);\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.router.navigate(['/auth', 'signin']);\r\n\t\t\t\t\tresolve(false);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t );\r\n\t   }\r\n\t);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport * as firebase from 'firebase';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n\tconstructor() { }\r\n\r\n\tcreateNewUser(email: string, password: string) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tfirebase.auth().createUserWithEmailAndPassword(email, password).then(\r\n\t\t\t\t() => { resolve(); },\r\n\t\t\t\terror => { reject(error); }\r\n\r\n\t\t\t);\r\n\r\n\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tsignInUser(email: string, password: string) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\r\n\t\t\tfirebase.auth().signInWithEmailAndPassword(email, password).then(\r\n\t\t\t\t() => { resolve(); },\r\n\t\t\t\terror => { reject(error); }\r\n\r\n\t\t\t);\r\n\t\t\tconsole.log(\"sara\");\r\n\r\n\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tsignOutUser() {\r\n\t\tfirebase.auth().signOut();\r\n\t}\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Pret } from '../shared/pret';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class PretService {\n  // Define API\n  apiURL = 'http://localhost:8081';\n  constructor(private http: HttpClient) { }\n\n  /*========================================\n    CRUD Methods for consuming RESTful API\n  =========================================*/\n\n  // Http Options\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  }\n\n  // HttpClient API get() method => Fetch employees list\n  getPrets(): Observable<Pret> {\n    return this.http.get<Pret>(this.apiURL + '/prets')\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  // HttpClient API get() method => Fetch employee\n  getPret(idpret): Observable<Pret> {\n    return this.http.get<Pret>(this.apiURL + '/prets/' + idpret)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  // HttpClient API post() method => Create employee\n  createPret(pret): Observable<Pret> {\n    return this.http.post<Pret>(this.apiURL + '/prets', pret, this.httpOptions)  \n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }  \n\n  // HttpClient API put() method => Update employee\n  updatePret(idpret, pret): Observable<Pret> {\n    return this.http.put<Pret>(this.apiURL + '/prets/' + idpret, pret, this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  // HttpClient API delete() method => Delete employee\n  deletePret(idpret){\n    return this.http.delete<Pret>(this.apiURL + '/prets/' + idpret, this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  // Error handling\n  handleError(error) {\n     let errorMessage = '';\n     if (error.error instanceof ErrorEvent) {\n       // Get client-side error\n       errorMessage = error.error.message;\n     } else {\n       // Get server-side error\n       errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n     }\n     window.alert(errorMessage);\n     return throwError(errorMessage);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Book } from '../shared/book';\nimport { Observable, throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class RestApiService {\n  // Define API\n  apiURL = 'http://localhost:8081';\n\n  constructor(private http: HttpClient) { }\n\n  /*========================================\n    CRUD Methods for consuming RESTful API\n  =========================================*/\n\n  // Http Options\n  httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  }\n\n  // HttpClient API get() method => Fetch employees list\n  getBooks(): Observable<Book> {\n    return this.http.get<Book>(this.apiURL + '/books')\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  // HttpClient API get() method => Fetch employee\n  getBook(codeBarre): Observable<Book> {\n    return this.http.get<Book>(this.apiURL + '/books/' + codeBarre)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  // HttpClient API post() method => Create employee\n  createBook(book): Observable<Book> {\n    return this.http.post<Book>(this.apiURL + '/books', book, this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }  \n\n  // HttpClient API put() method => Update employee\n  updateBook(codeBarre, book): Observable<Book> {\n    return this.http.put<Book>(this.apiURL + '/books/' + codeBarre, book, this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  // HttpClient API delete() method => Delete employee\n  deleteBook(codeBarre){\n    return this.http.delete<Book>(this.apiURL + '/books/' + codeBarre, this.httpOptions)\n    .pipe(\n      retry(1),\n      catchError(this.handleError)\n    )\n  }\n\n  // Error handling\n  handleError(error) {\n     let errorMessage = '';\n     if (error.error instanceof ErrorEvent) {\n       // Get client-side error\n       errorMessage = error.error.message;\n     } else {\n       // Get server-side error\n       errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n     }\n     window.alert(errorMessage);\n     return throwError(errorMessage);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}